{"version":3,"sources":["../../../src/raydium/liquidity/type.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\r\nimport { ApiV3PoolInfoStandardItem, AmmV4Keys, AmmV5Keys, PoolKeys } from \"@/api/type\";\r\nimport { TxVersion } from \"@/common/txTool/txType\";\r\nimport { BigNumberish } from \"@/common/bignumber\";\r\nimport BN from \"bn.js\";\r\nimport { ComputeBudgetConfig } from \"@/raydium/type\";\r\nimport { TokenAmount } from \"@/module/amount\";\r\nimport { liquidityStateV4Layout } from \"./layout\";\r\nimport Decimal from \"decimal.js\";\r\n\r\nexport type LiquiditySide = \"a\" | \"b\";\r\nexport type AmountSide = \"base\" | \"quote\";\r\n\r\nexport interface AddLiquidityParams<T = TxVersion.LEGACY> {\r\n  poolInfo: ApiV3PoolInfoStandardItem;\r\n  poolKeys?: AmmV4Keys | AmmV5Keys;\r\n  payer?: PublicKey;\r\n  amountInA: TokenAmount;\r\n  amountInB: TokenAmount;\r\n  fixedSide: LiquiditySide;\r\n  config?: {\r\n    bypassAssociatedCheck?: boolean;\r\n    checkCreateATAOwner?: boolean;\r\n  };\r\n  txVersion?: T;\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n}\r\n\r\nexport interface RemoveParams<T = TxVersion.LEGACY> {\r\n  poolInfo: ApiV3PoolInfoStandardItem;\r\n  poolKeys?: AmmV4Keys | AmmV5Keys;\r\n  payer?: PublicKey;\r\n  amountIn: BN;\r\n  config?: {\r\n    bypassAssociatedCheck?: boolean;\r\n    checkCreateATAOwner?: boolean;\r\n  };\r\n  txVersion?: T;\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n}\r\n\r\nexport interface LiquidityUserKeys {\r\n  baseTokenAccount: PublicKey;\r\n  quoteTokenAccount: PublicKey;\r\n  lpTokenAccount: PublicKey;\r\n  owner: PublicKey;\r\n}\r\n\r\nexport interface LiquidityAddInstructionParams {\r\n  poolInfo: ApiV3PoolInfoStandardItem;\r\n  poolKeys: AmmV4Keys | AmmV5Keys;\r\n  userKeys: LiquidityUserKeys;\r\n  baseAmountIn: BigNumberish;\r\n  quoteAmountIn: BigNumberish;\r\n  fixedSide: AmountSide;\r\n}\r\n\r\nexport interface RemoveLiquidityInstruction {\r\n  poolInfo: ApiV3PoolInfoStandardItem;\r\n  poolKeys: AmmV4Keys | AmmV5Keys;\r\n  userKeys: LiquidityUserKeys;\r\n  amountIn: BigNumberish;\r\n}\r\n\r\nexport interface LiquidityPoolKeys {\r\n  // base\r\n  id: PublicKey;\r\n  baseMint: PublicKey;\r\n  quoteMint: PublicKey;\r\n  lpMint: PublicKey;\r\n  baseDecimals: number;\r\n  quoteDecimals: number;\r\n  lpDecimals: number;\r\n  // version\r\n  version: 4 | 5;\r\n  programId: PublicKey;\r\n  // keys\r\n  authority: PublicKey;\r\n  nonce: number;\r\n  baseVault: PublicKey;\r\n  quoteVault: PublicKey;\r\n  lpVault: PublicKey;\r\n  openOrders: PublicKey;\r\n  targetOrders: PublicKey;\r\n  withdrawQueue: PublicKey;\r\n  // market version\r\n  marketVersion: 3;\r\n  marketProgramId: PublicKey;\r\n  // market keys\r\n  marketId: PublicKey;\r\n  marketAuthority: PublicKey;\r\n  lookupTableAccount: PublicKey;\r\n  configId: PublicKey;\r\n}\r\n\r\nexport interface CreatePoolParam<T> {\r\n  programId: PublicKey;\r\n  marketInfo: {\r\n    marketId: PublicKey;\r\n    programId: PublicKey;\r\n  };\r\n  baseMintInfo: {\r\n    mint: PublicKey;\r\n    decimals: number;\r\n  };\r\n  quoteMintInfo: {\r\n    mint: PublicKey;\r\n    decimals: number;\r\n  };\r\n\r\n  baseAmount: BN;\r\n  quoteAmount: BN;\r\n  startTime: BN;\r\n\r\n  ownerInfo: {\r\n    feePayer?: PublicKey;\r\n    useSOLBalance?: boolean; // if has WSOL mint\r\n  };\r\n  associatedOnly: boolean;\r\n  checkCreateATAOwner?: boolean;\r\n  tokenProgram?: PublicKey;\r\n  feeDestinationId: PublicKey;\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n  txVersion?: T;\r\n}\r\n\r\nexport interface CreatePoolAddress {\r\n  programId: PublicKey;\r\n  ammId: PublicKey;\r\n  ammAuthority: PublicKey;\r\n  ammOpenOrders: PublicKey;\r\n  lpMint: PublicKey;\r\n  coinMint: PublicKey;\r\n  pcMint: PublicKey;\r\n  coinVault: PublicKey;\r\n  pcVault: PublicKey;\r\n  withdrawQueue: PublicKey;\r\n  ammTargetOrders: PublicKey;\r\n  poolTempLp: PublicKey;\r\n  marketProgramId: PublicKey;\r\n  marketId: PublicKey;\r\n  ammConfigId: PublicKey;\r\n  feeDestinationId: PublicKey;\r\n}\r\n\r\nexport interface SwapFixedInInstructionParamsV4 {\r\n  poolKeys: AmmV4Keys | AmmV5Keys;\r\n  userKeys: {\r\n    tokenAccountIn: PublicKey;\r\n    tokenAccountOut: PublicKey;\r\n    owner: PublicKey;\r\n  };\r\n  amountIn: BigNumberish;\r\n  minAmountOut: BigNumberish;\r\n}\r\n\r\nexport interface SwapFixedOutInstructionParamsV4 {\r\n  poolKeys: AmmV4Keys | AmmV5Keys;\r\n  userKeys: {\r\n    tokenAccountIn: PublicKey;\r\n    tokenAccountOut: PublicKey;\r\n    owner: PublicKey;\r\n  };\r\n  // maximum amount in\r\n  maxAmountIn: BigNumberish;\r\n  amountOut: BigNumberish;\r\n}\r\n\r\nexport type SwapSide = \"in\" | \"out\";\r\nexport interface SwapInstructionParams {\r\n  version: number;\r\n  poolKeys: AmmV4Keys | AmmV5Keys;\r\n  userKeys: {\r\n    tokenAccountIn: PublicKey;\r\n    tokenAccountOut: PublicKey;\r\n    owner: PublicKey;\r\n  };\r\n  amountIn: BigNumberish;\r\n  amountOut: BigNumberish;\r\n  fixedSide: SwapSide;\r\n}\r\n\r\nexport interface InitPoolInstructionParamsV4 {\r\n  poolKeys: AmmV4Keys | AmmV5Keys;\r\n  userKeys: {\r\n    lpTokenAccount: PublicKey;\r\n    payer: PublicKey;\r\n  };\r\n  startTime: BigNumberish;\r\n}\r\n\r\nexport interface ComputeAmountOutParam {\r\n  poolInfo: ApiV3PoolInfoStandardItem & {\r\n    baseReserve: BN;\r\n    quoteReserve: BN;\r\n    version: 4 | 5;\r\n    status: number;\r\n  };\r\n  mintIn: string | PublicKey;\r\n  mintOut: string | PublicKey;\r\n  amountIn: BN;\r\n  slippage: number;\r\n}\r\n\r\nexport interface SwapParam<T = TxVersion.LEGACY> {\r\n  poolInfo: ApiV3PoolInfoStandardItem;\r\n  poolKeys?: AmmV4Keys | AmmV5Keys;\r\n  amountIn: BN;\r\n  amountOut: BN;\r\n  inputMint: string;\r\n  fixedSide: SwapSide;\r\n  config?: {\r\n    associatedOnly?: boolean;\r\n    inputUseSolBalance?: boolean;\r\n    outputUseSolBalance?: boolean;\r\n  };\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n  txVersion?: T;\r\n}\r\n\r\nexport type AmmRpcData = ReturnType<typeof liquidityStateV4Layout.decode> & {\r\n  baseReserve: BN;\r\n  quoteReserve: BN;\r\n  mintAAmount: BN;\r\n  mintBAmount: BN;\r\n  poolPrice: Decimal;\r\n  programId: PublicKey;\r\n};\r\n"],"mappings":"kWAAA","names":[]}