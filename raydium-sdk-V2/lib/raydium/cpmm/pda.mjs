import{PublicKey as p}from"@solana/web3.js";import{PublicKey as L,ComputeBudgetProgram as F,Transaction as W,TransactionMessage as q,Keypair as z,VersionedTransaction as N}from"@solana/web3.js";import{TOKEN_PROGRAM_ID as j}from"@solana/spl-token";import{get as c,set as C}from"lodash";var s=class{constructor(e){this.logLevel=e.logLevel!==void 0?e.logLevel:0,this.name=e.name}set level(e){this.logLevel=e}get time(){return Date.now().toString()}get moduleName(){return this.name}isLogLevel(e){return e<=this.logLevel}error(...e){return this.isLogLevel(0)?(console.error(this.time,this.name,"sdk logger error",...e),this):this}logWithError(...e){let r=e.map(i=>typeof i=="object"?JSON.stringify(i):i).join(", ");throw new Error(r)}warning(...e){return this.isLogLevel(1)?(console.warn(this.time,this.name,"sdk logger warning",...e),this):this}info(...e){return this.isLogLevel(2)?(console.info(this.time,this.name,"sdk logger info",...e),this):this}debug(...e){return this.isLogLevel(3)?(console.debug(this.time,this.name,"sdk logger debug",...e),this):this}},m={},w={};function f(t){let e=c(m,t);if(!e){let r=c(w,t);e=new s({name:t,logLevel:r}),C(m,t,e)}return e}var X=f("Raydium_txUtil");function o(t,e){let[r,i]=L.findProgramAddressSync(t,e);return{publicKey:r,nonce:i}}var A=Buffer.from("vault_and_lp_mint_auth_seed","utf8"),te=Buffer.from("amm_config","utf8"),S=Buffer.from("pool","utf8"),B=Buffer.from("pool_lp_mint","utf8"),K=Buffer.from("pool_vault","utf8"),V=Buffer.from("observation","utf8");function I(t){return o([A],t)}function re(t,e){return{publicKey:new p("AJBTtXxDzoUtZrEPS7ZR5H18gYpLK4r9BH4AxCWD7v1y"),nonce:255}}function v(t,e,r,i,a){return o([S,e.toBuffer(),r.toBuffer(),i.toBuffer(),a.toBuffer()],t)}function T(t,e){return o([B,e.toBuffer()],t)}function g(t,e,r){return o([K,e.toBuffer(),r.toBuffer()],t)}function E(t,e){return o([V,e.toBuffer()],t)}function ie({creator:t,programId:e,mintA:r,mintB:i}){let a=new p("AJBTtXxDzoUtZrEPS7ZR5H18gYpLK4r9BH4AxCWD7v1y"),d=I(e).publicKey,n=v(e,a,r,i,t).publicKey,y=T(e,n).publicKey,h=g(e,n,r).publicKey,b=g(e,n,i).publicKey,P=E(e,n).publicKey;return{poolId:n,configId:a,authority:d,lpMint:y,vaultA:h,vaultB:b,observationId:P}}export{re as getCpmmPdaAmmConfigId,v as getCpmmPdaPoolId,ie as getCreatePoolKeys,T as getPdaLpMint,E as getPdaObservationId,I as getPdaPoolAuthority,g as getPdaVault};
//# sourceMappingURL=pda.mjs.map