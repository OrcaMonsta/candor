{"version":3,"sources":["../../../../src/raydium/cpmm/curve/constantProduct.ts","../../../../src/raydium/cpmm/curve/fee.ts"],"sourcesContent":["import BN from \"bn.js\";\r\nimport { RoundDirection, SwapWithoutFeesResult, TradingTokenResult } from \"./calculator\";\r\n\r\nfunction checkedRem(dividend: BN, divisor: BN): BN {\r\n  if (divisor.isZero()) throw Error(\"divisor is zero\");\r\n\r\n  const result = dividend.mod(divisor);\r\n  return result;\r\n}\r\n\r\nfunction checkedCeilDiv(dividend: BN, rhs: BN): BN[] {\r\n  if (rhs.isZero()) throw Error(\"rhs is zero\");\r\n\r\n  let quotient = dividend.div(rhs);\r\n\r\n  if (quotient.isZero()) throw Error(\"quotient is zero\");\r\n\r\n  let remainder = checkedRem(dividend, rhs);\r\n\r\n  if (remainder.gt(ZERO)) {\r\n    quotient = quotient.add(new BN(1));\r\n\r\n    rhs = dividend.div(quotient);\r\n    remainder = checkedRem(dividend, quotient);\r\n    if (remainder.gt(ZERO)) {\r\n      rhs = rhs.add(new BN(1));\r\n    }\r\n  }\r\n  return [quotient, rhs];\r\n}\r\n\r\nconst ZERO = new BN(0);\r\n\r\nexport class ConstantProductCurve {\r\n  static swapWithoutFees(sourceAmount: BN, swapSourceAmount: BN, swapDestinationAmount: BN): SwapWithoutFeesResult {\r\n    const invariant = swapSourceAmount.mul(swapDestinationAmount);\r\n\r\n    const newSwapSourceAmount = swapSourceAmount.add(sourceAmount);\r\n    const [newSwapDestinationAmount, _newSwapSourceAmount] = checkedCeilDiv(invariant, newSwapSourceAmount);\r\n\r\n    const sourceAmountSwapped = _newSwapSourceAmount.sub(swapSourceAmount);\r\n    const destinationAmountSwapped = swapDestinationAmount.sub(newSwapDestinationAmount);\r\n    if (destinationAmountSwapped.isZero()) throw Error(\"destinationAmountSwapped is zero\");\r\n\r\n    return {\r\n      sourceAmountSwapped,\r\n      destinationAmountSwapped,\r\n    };\r\n  }\r\n\r\n  static lpTokensToTradingTokens(\r\n    lpTokenAmount: BN,\r\n    lpTokenSupply: BN,\r\n    swapTokenAmount0: BN,\r\n    swapTokenAmount1: BN,\r\n    roundDirection: RoundDirection,\r\n  ): TradingTokenResult {\r\n    let tokenAmount0 = lpTokenAmount.mul(swapTokenAmount0).div(lpTokenSupply);\r\n    let tokenAmount1 = lpTokenAmount.mul(swapTokenAmount1).div(lpTokenSupply);\r\n\r\n    if (roundDirection === RoundDirection.Floor) {\r\n      return { tokenAmount0, tokenAmount1 };\r\n    } else if (roundDirection === RoundDirection.Ceiling) {\r\n      const tokenRemainder0 = checkedRem(lpTokenAmount.mul(swapTokenAmount0), lpTokenSupply);\r\n\r\n      if (tokenRemainder0.gt(ZERO) && tokenAmount0.gt(ZERO)) {\r\n        tokenAmount0 = tokenAmount0.add(new BN(1));\r\n      }\r\n\r\n      const token1Remainder = checkedRem(lpTokenAmount.mul(swapTokenAmount1), lpTokenSupply);\r\n\r\n      if (token1Remainder.gt(ZERO) && tokenAmount1.gt(ZERO)) {\r\n        tokenAmount1 = tokenAmount1.add(new BN(1));\r\n      }\r\n\r\n      return { tokenAmount0, tokenAmount1 };\r\n    }\r\n    throw Error(\"roundDirection value error\");\r\n  }\r\n}\r\n","import BN from \"bn.js\";\r\n\r\nexport const FEE_RATE_DENOMINATOR_VALUE = new BN(1_000_000);\r\n\r\nexport function ceilDiv(tokenAmount: BN, feeNumerator: BN, feeDenominator: BN): BN {\r\n  return tokenAmount.mul(feeNumerator).add(feeDenominator).sub(new BN(1)).div(feeDenominator);\r\n}\r\n\r\nexport function floorDiv(tokenAmount: BN, feeNumerator: BN, feeDenominator: BN): BN {\r\n  return tokenAmount.mul(feeNumerator).div(feeDenominator);\r\n}\r\n\r\nexport class CpmmFee {\r\n  static tradingFee(amount: BN, tradeFeeRate: BN): BN {\r\n    return ceilDiv(amount, tradeFeeRate, FEE_RATE_DENOMINATOR_VALUE);\r\n  }\r\n  static protocolFee(amount: BN, protocolFeeRate: BN): BN {\r\n    return floorDiv(amount, protocolFeeRate, FEE_RATE_DENOMINATOR_VALUE);\r\n  }\r\n  static fundFee(amount: BN, fundFeeRate: BN): BN {\r\n    return floorDiv(amount, fundFeeRate, FEE_RATE_DENOMINATOR_VALUE);\r\n  }\r\n}\r\n"],"mappings":"6iBAAA,+DAAA,MAAe,oBCAf,MAAe,oBAEF,EAA6B,GAAI,WAAG,GAAS,EDC1D,WAAoB,EAAc,EAAiB,CACjD,GAAI,EAAQ,OAAO,EAAG,KAAM,OAAM,iBAAiB,EAGnD,MADe,GAAS,IAAI,CAAO,CAErC,CAEA,WAAwB,EAAc,EAAe,CACnD,GAAI,EAAI,OAAO,EAAG,KAAM,OAAM,aAAa,EAE3C,GAAI,GAAW,EAAS,IAAI,CAAG,EAE/B,GAAI,EAAS,OAAO,EAAG,KAAM,OAAM,kBAAkB,EAErD,GAAI,GAAY,EAAW,EAAU,CAAG,EAExC,MAAI,GAAU,GAAG,CAAI,GACnB,GAAW,EAAS,IAAI,GAAI,WAAG,CAAC,CAAC,EAEjC,EAAM,EAAS,IAAI,CAAQ,EAC3B,EAAY,EAAW,EAAU,CAAQ,EACrC,EAAU,GAAG,CAAI,GACnB,GAAM,EAAI,IAAI,GAAI,WAAG,CAAC,CAAC,IAGpB,CAAC,EAAU,CAAG,CACvB,CAEA,GAAM,GAAO,GAAI,WAAG,CAAC,EAEd,OAA2B,OACzB,iBAAgB,EAAkB,EAAsB,EAAkD,CAC/G,GAAM,GAAY,EAAiB,IAAI,CAAqB,EAEtD,EAAsB,EAAiB,IAAI,CAAY,EACvD,CAAC,EAA0B,GAAwB,EAAe,EAAW,CAAmB,EAEhG,EAAsB,EAAqB,IAAI,CAAgB,EAC/D,EAA2B,EAAsB,IAAI,CAAwB,EACnF,GAAI,EAAyB,OAAO,EAAG,KAAM,OAAM,kCAAkC,EAErF,MAAO,CACL,sBACA,0BACF,CACF,OAEO,yBACL,EACA,EACA,EACA,EACA,EACoB,CACpB,GAAI,GAAe,EAAc,IAAI,CAAgB,EAAE,IAAI,CAAa,EACpE,EAAe,EAAc,IAAI,CAAgB,EAAE,IAAI,CAAa,EAExE,GAAI,IAAmB,EACrB,MAAO,CAAE,eAAc,cAAa,EAC/B,GAAI,IAAmB,EAG5B,MAAI,AAFoB,GAAW,EAAc,IAAI,CAAgB,EAAG,CAAa,EAEjE,GAAG,CAAI,GAAK,EAAa,GAAG,CAAI,GAClD,GAAe,EAAa,IAAI,GAAI,WAAG,CAAC,CAAC,GAKvC,AAFoB,EAAW,EAAc,IAAI,CAAgB,EAAG,CAAa,EAEjE,GAAG,CAAI,GAAK,EAAa,GAAG,CAAI,GAClD,GAAe,EAAa,IAAI,GAAI,WAAG,CAAC,CAAC,GAGpC,CAAE,eAAc,cAAa,EAEtC,KAAM,OAAM,4BAA4B,CAC1C,CACF","names":[]}